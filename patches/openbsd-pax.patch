--- cache.c.orig	2007-07-24 02:36:27.000000000 +0000
+++ cache.c	2007-07-24 02:37:43.000000000 +0000
@@ -200,7 +200,7 @@
 	 * No entry for this uid, we will add it
 	 */
 	if (!pwopn) {
-		setpassent(1);
+		setpwent();
 		++pwopn;
 	}
 	if (ptr == NULL)
@@ -266,7 +266,7 @@
 	 * No entry for this gid, we will add it
 	 */
 	if (!gropn) {
-		setgroupent(1);
+		setgrent();
 		++gropn;
 	}
 	if (ptr == NULL)
@@ -333,7 +333,7 @@
 	}
 
 	if (!pwopn) {
-		setpassent(1);
+		setpwent();
 		++pwopn;
 	}
 
@@ -396,7 +396,7 @@
 	}
 
 	if (!gropn) {
-		setgroupent(1);
+		setgrent();
 		++gropn;
 	}
 	if (ptr == NULL)
--- gen_subs.c.orig	2007-07-24 01:55:24.000000000 +0000
+++ gen_subs.c	2007-07-24 02:12:46.000000000 +0000
@@ -47,12 +47,11 @@
 #include <sys/stat.h>
 #include <sys/param.h>
 #include <stdio.h>
-#include <tzfile.h>
+#include <time.h>
 #include <utmp.h>
 #include <unistd.h>
 #include <stdlib.h>
 #include <string.h>
-#include <vis.h>
 #include "pax.h"
 #include "extern.h"
 
@@ -65,6 +64,9 @@
  */
 #define MODELEN 20
 #define DATELEN 64
+#define DAYSPERNYEAR 365
+#define SECSPERDAY 86400
+#define VIS_CSTYLE 0
 #define SIXMONTHS	 ((DAYSPERNYEAR / 2) * SECSPERDAY)
 #define CURFRMT		"%b %e %H:%M"
 #define OLDFRMT		"%b %e  %Y"
@@ -205,7 +207,7 @@
 	/*
 	 * if printing to a tty, use vis(3) to print special characters.
 	 */
-	if (isatty(fileno(fp))) {
+	if (0 && isatty(fileno(fp))) {
 		for (cp = str; *cp; cp++) {
 			(void)vis(visbuf, cp[0], VIS_CSTYLE, cp[1]);
 			(void)fputs(visbuf, fp);
--- options.c.orig	2007-07-24 02:12:57.000000000 +0000
+++ options.c	2007-07-24 02:17:50.000000000 +0000
@@ -72,7 +72,7 @@
 static void printflg(unsigned int);
 static int c_frmt(const void *, const void *);
 static off_t str_offt(char *);
-static char *getline(FILE *fp);
+static char *bsd_getline(FILE *fp);
 static void pax_options(int, char **);
 static void pax_usage(void);
 static void tar_options(int, char **);
@@ -869,7 +869,7 @@
 						paxwarn(1, "Unable to open file '%s' for read", file);
 						tar_usage();
 					}
-					while ((str = getline(fp)) != NULL) {
+					while ((str = bsd_getline(fp)) != NULL) {
 						if (pat_add(str, dir) < 0)
 							tar_usage();
 						sawpat = 1;
@@ -948,7 +948,7 @@
 					paxwarn(1, "Unable to open file '%s' for read", file);
 					tar_usage();
 				}
-				while ((str = getline(fp)) != NULL) {
+				while ((str = bsd_getline(fp)) != NULL) {
 					if (ftree_add(str, 0) < 0)
 						tar_usage();
 				}
@@ -1164,7 +1164,7 @@
 					paxwarn(1, "Unable to open file '%s' for read", optarg);
 					cpio_usage();
 				}
-				while ((str = getline(fp)) != NULL) {
+				while ((str = bsd_getline(fp)) != NULL) {
 					pat_add(str, NULL);
 				}
 				fclose(fp);
@@ -1263,7 +1263,7 @@
 			 * no read errors allowed on updates/append operation!
 			 */
 			maxflt = 0;
-			while ((str = getline(stdin)) != NULL) {
+			while ((str = bsd_getline(stdin)) != NULL) {
 				ftree_add(str, 0);
 			}
 			if (getline_error) {
@@ -1440,7 +1440,7 @@
 	if ((num == LONG_MAX) || (num <= 0) || (expr == val))
 #	else
 	num = strtoq(val, &expr, 0);
-	if ((num == QUAD_MAX) || (num <= 0) || (expr == val))
+	if ((num == LLONG_MAX) || (num <= 0) || (expr == val))
 #	endif
 		return(0);
 
@@ -1492,7 +1492,7 @@
 }
 
 char *
-getline(FILE *f)
+bsd_getline(FILE *f)
 {
 	char *name, *temp;
 	size_t len;
--- sel_subs.c.orig	2007-07-24 02:21:54.000000000 +0000
+++ sel_subs.c	2007-07-24 02:23:38.000000000 +0000
@@ -52,12 +52,14 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <tzfile.h>
+#include <time.h>
 #include <unistd.h>
 #include "pax.h"
 #include "sel_subs.h"
 #include "extern.h"
 
+#define TM_YEAR_BASE 1900
+
 static int str_sec(const char *, time_t *);
 static int usr_match(ARCHD *);
 static int grp_match(ARCHD *);
--- pax.c.orig	2007-07-24 02:19:58.000000000 +0000
+++ pax.c	2007-07-24 02:21:31.000000000 +0000
@@ -105,7 +105,7 @@
 char	*ltmfrmt;		/* -v locale time format (if any) */
 char	*argv0;			/* root of argv[0] */
 sigset_t s_mask;		/* signal mask for cleanup critical sect */
-FILE	*listf = stderr;	/* file pointer to print file list to */
+FILE	*listf;	/* file pointer to print file list to */
 char	*tempfile;		/* tempfile to use for mkstemp(3) */
 char	*tempbase;		/* basename of tempfile to use for mkstemp(3) */
 
@@ -235,6 +235,12 @@
 	char *tmpdir;
 	size_t tdlen;
 
+	/* 
+	 * On some systems, stderr is not a constant, so we initialize listf
+	 * immediately to emulate the behavior.
+	 */
+	listf=stderr;
+
 	/*
 	 * Keep a reference to cwd, so we can always come back home.
 	 */
