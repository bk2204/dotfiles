---
- name: Bootstrap
  import_playbook: bootstrap.yaml
- name: Codespace Base Setup
  hosts: all
  environment:
    DEBIAN_FRONTEND: noninteractive
  tasks:
    - name: Install dependencies
      apt:
        pkg:
          - acl
          - cargo
          - rustc
        update_cache: true
      become: yes
      become_user: root
    - name: Install gopls
      apt:
        pkg:
          - gopls
      become: yes
      become_user: root
      ignore_errors: true
    # This is required because otherwise installing the zsh configuration causes
    # zsh to fail because compinit operates on an insecure directory (~/.zsh).
    - name: Remove broken ACL for /workspaces
      shell: 'if [ -n "$(getfacl -s /workspaces)" ]; then setfacl -Rb /workspaces; fi'
      become: yes
      become_user: root
    - name: Remove broken ACL for /tmp
      shell: 'if [ -n "$(getfacl -s /tmp)" ]; then setfacl -Rb /tmp; fi'
      become: yes
      become_user: root
    # We would like sane ownership and permissions here.
    - name: Undo unexpected ACL ownership on /workspaces
      file:
        path: /workspaces
        state: directory
        recurse: true
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_id }}'
        mode: o-w
        follow: false
      become: yes
      become_user: root
    - name: Undo unexpected ACL ownership on home directory
      file:
        path: '/home/{{ ansible_user_id }}'
        state: directory
        recurse: true
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_id }}'
        mode: o-rwx
        follow: false
      become: yes
      become_user: root
- name: Account Setup
  import_playbook: create-account.yaml
- name: Codespace User Setup
  hosts: all
  tasks:
    - name: Clone dotfiles
      git:
        repo: https://github.com/bk2204/dotfiles.git
        remote: def
        dest: /workspaces/dotfiles
        version: GitHub
    - name: Clone dotfiles-private
      git:
        repo: ssh://git@github.com/bk2204/dotfiles-private.git
        remote: def
        dest: /workspaces/dotfiles-private
        version: GitHub
    - name: Enable dotfiles-private
      file:
        src: ../dotfiles-private/rules-overlay.mk
        dest: /workspaces/dotfiles/rules-overlay.mk
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_id }}'
        state: link
    - name: Checkout submodules for dotfiles
      shell: 'git submodule update --init'
      args:
        chdir: /workspaces/dotfiles
    - name: Set up dotfiles configuration file
      shell: 'ln -sf config/config-work-codespace.yaml config.yaml'
      args:
        chdir: /workspaces/dotfiles
    - name: Deploy dotfiles
      shell: 'make install'
      args:
        chdir: /workspaces/dotfiles
    - name: Deploy muter
      command: 'cargo install --locked muter'
    - name: Deploy Lawn
      command: 'cargo install --locked lawn'
    - name: Deploy scutiger
      command: 'cargo install --locked scutiger-bin'
    - name: Setup remote repository
      shell: 'for i in /workspaces/*; do "$HOME/bin/dct-snip" -r setup-repository "$i"; done'
    - name: Install neovim-gtk helper
      shell: 'cd ~/.vim/plugin && curl -LO https://raw.githubusercontent.com/Lyude/neovim-gtk/main/runtime/plugin/nvim_gui_shim.vim'
    - name: Create $HOME/mnt
      file:
        path: '/home/{{ ansible_user_id }}/mnt'
        state: directory
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_id }}'
        mode: 0755
    - name: Create Lawn mount dir
      file:
        path: '/home/{{ ansible_user_id }}/mnt/remote'
        state: directory
        owner: '{{ ansible_user_id }}'
        group: '{{ ansible_user_id }}'
        mode: 0700
