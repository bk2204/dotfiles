#!/usr/bin/ruby

require 'clipboard'
require 'optparse'
require 'yaml'

def parse_opts(args)
  options = {}

  OptionParser.new do |opts|
    opts.banner = 'Usage: msg TAG'

    opts.on('--help', 'Print this help') do
      puts opts
      options[:command] = :help
    end

    opts.on('--list', 'List known messages') do
      options[:command] = :list
    end

    opts.on('--clipboard', 'List known messages') do
      options[:clipboard] = true
    end
  end.parse!(args)

  [options, args]
end

def config_path
  config = ENV['XDG_CONFIG_HOME'] || File.join(ENV['HOME'] || '/', '.config')
  File.join(config, 'ct-msg', 'data.yaml')
end

def load_messages
  begin
    fp = File.new(config_path, 'r')
    YAML.load(fp.read)
  rescue Errno::ENOENT
    { :messages => {} }
  end
end

def script(args)
  options, args = parse_opts(args)

  return 0 if options[:command] == :help

  msgs = load_messages[:messages]
  case options[:command]
  when :list
    puts msgs.keys.sort
    0
  else
    msg = msgs.fetch(args[0])
    if options[:clipboard]
      Clipboard.copy msg
    else
      print msg
    end
    0
  end
end

exit script(ARGV.dup) if __FILE__ == $PROGRAM_NAME
